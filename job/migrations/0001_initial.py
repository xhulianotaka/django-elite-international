# -*- coding: utf-8 -*-
# Generated by Django 1.9.9 on 2017-10-18 13:18
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import froala_editor.fields
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('taggit', '0002_auto_20150616_2121'),
    ]

    operations = [
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=300)),
                ('slug', models.SlugField(help_text='(will be automatically generated)', unique=True)),
                ('description', froala_editor.fields.FroalaField(help_text='(job description)')),
                ('posted_at', models.DateTimeField(auto_now_add=True)),
                ('location', models.CharField(help_text='(job location in)', max_length=300)),
                ('job_type', models.CharField(choices=[('P', 'Permanent'), ('C', 'Contract'), ('I', 'Internship')], max_length=1)),
                ('company_name', models.CharField(max_length=250)),
                ('last_date', models.DateField(help_text='(last day of application)')),
                ('requirements', froala_editor.fields.FroalaField(help_text='(job description)')),
            ],
            options={
                'ordering': ['last_date'],
            },
        ),
        migrations.CreateModel(
            name='JobApplication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=300)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.IntegerField()),
                ('current_company', models.CharField(blank=True, help_text='<i class="ion-ios-information fa-lg"></i> optional', max_length=300, null=True)),
                ('portfolio_url', models.URLField(blank=True, help_text='<i class="ion-ios-information fa-lg"></i> optional', null=True)),
                ('additional_information', models.TextField(blank=True, help_text='<i class="ion-ios-information fa-lg"></i> add a cover letter or anything else you want to share', null=True)),
                ('resume', models.FileField(help_text='<i class="ion-ios-information fa-lg"></i> resume/CV (we prefer in pdf)', upload_to='Application_Documents')),
                ('applied_at', models.DateTimeField(auto_now_add=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='job.Job')),
            ],
            options={
                'ordering': ['-applied_at'],
            },
        ),
        migrations.CreateModel(
            name='JobCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=260)),
                ('slug', models.SlugField(help_text='(will be automatically generated)', unique=True)),
                ('description', froala_editor.fields.FroalaField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.AddField(
            model_name='job',
            name='category',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='job.JobCategory'),
        ),
        migrations.AddField(
            model_name='job',
            name='posted_by',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='job',
            name='tags',
            field=taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags'),
        ),
    ]
